<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>启发光明的博客</title>
  
  <subtitle>个人博客，iOS开发，C/C++开发，IT技术，每日精选</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-05-25T04:02:40.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>启发光明</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>「开卷有益」知识产权保护声明</title>
    <link href="http://yoursite.com/2018/05/24/%E3%80%8C%E5%BC%80%E5%8D%B7%E6%9C%89%E7%9B%8A%E3%80%8D%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83%E4%BF%9D%E6%8A%A4%E5%A3%B0%E6%98%8E/"/>
    <id>http://yoursite.com/2018/05/24/「开卷有益」知识产权保护声明/</id>
    <published>2018-05-24T10:50:07.000Z</published>
    <updated>2018-05-25T04:02:40.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="「开卷有益」知识产权保护声明"><a href="#「开卷有益」知识产权保护声明" class="headerlink" title="「开卷有益」知识产权保护声明"></a>「开卷有益」知识产权保护声明</h1><p>「开卷有益」仅提供应用程序及内容的搜索服务，「开卷有益」不会对作品内容作任何形式的编辑修改，自身不长期存储、控制、编辑或修改被链接的信息内容或其表现形式。</p><p>「开卷有益」内仅提供根据用户搜索指令，采用搜索引擎技术搜索互联网自动生成的搜索结果链接页面展示，最终作品内容由第三方提供，与「开卷有益」无关。</p><p>「开卷有益」高度重视知识产权保护并遵守中国各项知识产权法律、法规和具有约束力的规范性文件，尊重著作权人的合法权益。根据我国法律的有关规定，「开卷有益」制定了如下旨在保护权利人合法权益的措施和步骤，当权利人发现「开卷有益」搜索结果生成的链接所指向的内容侵犯其合法权益时，权利人应事先向「开卷有益」发出「权利通知书」，「开卷有益」将根据中国法律法规的有关规定采取措施移除相关内容或断开相关链接。</p><p>为保证「开卷有益」有效处理您发送的“权利通知”，请您确保权利通知应包括以下内容：</p><p>具体的联络信息，包括权利人的姓名(名称)、通信地址、电话号码、身份证/护照复印件(自然人)、单位登记证明复印件;<br>要求删除或断开链接的作品或文字名称及确切网络地址;<br>构成侵权的初步证明材料，包括但不限于权利人对涉嫌侵权作品或内容拥有合法权利的权属证明文件、涉嫌侵权事实等;<br>权利通知需由权利人或其合法授权人亲笔签名，若权利人为单位则需加盖单位公章。<br>您应对权利通知内容的真实性负责。您应了解，若通知书的内容不真实，您将承担由此造成的全部法律责任。「开卷有益」在收到符合条件的权利通知后，将根据中国法律法规及规范性文件采取措施立即删除相关涉嫌侵权内容，或者断开与涉嫌侵权作品或内容的链接，并将相应权利通知转送作品或内容提供者。</p><p>反通知</p><p>作品或内容提供者收到「开卷有益」转送的权利通知后，认为其提供的作品或内容未侵犯他人权利的，可以书面形式向「开卷有益」提供反通知，要求恢复被删除的作品或内容，或恢复被断开的链接。</p><p>反通知应当包含下列内容：</p><p>具体的联络信息，包括权利人的姓名(名称)、通信地址、电话号码、身份证/护照复印件(自然人)、单位登记证明复印件;<br>要求恢复被删除或者被断开链接的作品或内容的准确名称和网络地址;<br>不构成侵权的初步证明材料，包括但不限于对作品或内容享有合法权利的权属证明文件等;<br>反通知需由权利人或其合法授权人亲笔签名，若为单位则需加盖单位公章。<br>作品或内容提供者应对反通知书内容的真实性负责。若反通知的内容不真实，提供者将承担由此造成的全部法律责任。「开卷有益」收到作品或内容提供者的反通知后，将立即恢复被删除的作品或内容，或者恢复被断开的作品或内容链接，同时将作品或内容提供者的反通知转送权利人。「开卷有益」对恢复被删除作品或内容，或恢复者被断开作品或内容链接的行为不承担任何法律责任。权利人不得再通知「开卷有益」删除该作品或内容，或者断开与该作品或内容的链接。</p><p>权利通知及反通知应以电子邮件的方式发往如下地址：inspirelife@hotmail.com</p><p>本《知识产权保护声明》作为《最终用户条款》的有效组成部分，与其具有同等法律效力。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;「开卷有益」知识产权保护声明&quot;&gt;&lt;a href=&quot;#「开卷有益」知识产权保护声明&quot; class=&quot;headerlink&quot; title=&quot;「开卷有益」知识产权保护声明&quot;&gt;&lt;/a&gt;「开卷有益」知识产权保护声明&lt;/h1&gt;&lt;p&gt;「开卷有益」仅提供应用程序及内容的搜索服务，
      
    
    </summary>
    
      <category term="开卷有益" scheme="http://yoursite.com/categories/%E5%BC%80%E5%8D%B7%E6%9C%89%E7%9B%8A/"/>
    
    
  </entry>
  
  <entry>
    <title>「开卷有益」APP 用户隐私保护政策</title>
    <link href="http://yoursite.com/2018/05/24/%E3%80%8C%E5%BC%80%E5%8D%B7%E6%9C%89%E7%9B%8A%E3%80%8DAPP-%E7%94%A8%E6%88%B7%E9%9A%90%E7%A7%81%E4%BF%9D%E6%8A%A4%E6%94%BF%E7%AD%96/"/>
    <id>http://yoursite.com/2018/05/24/「开卷有益」APP-用户隐私保护政策/</id>
    <published>2018-05-24T10:50:01.000Z</published>
    <updated>2018-05-25T04:01:48.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="用户隐私保护政策"><a href="#用户隐私保护政策" class="headerlink" title="用户隐私保护政策"></a>用户隐私保护政策</h1><h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>「开卷有益」非常重视保护用户的个人隐私，保护用户的个人信息，希望与大家用户之间建立和谐的互相信任的关系。</p><p>在您在使用「开卷有益」软件和服务时，「开卷有益」可能会收集和使用您的一些相关信息。在此，我们将通过本《隐私政策》向您说明，在我们提供服务的过程中可能会是如何收集、使用、储存相关这些信息，以及我们将为您提供的控制和如何保护这些信息和您的隐私安全的方式。本《隐私保护政策》与您所使用的「开卷有益」服务息息相关，希望您仔细阅读。在您使用或继续使用我们的软件或服务，即表明您同意我们按照本《隐私保护政策》收集、使用、储存您的相关信息。</p><h2 id="二、我们可能收到的信息"><a href="#二、我们可能收到的信息" class="headerlink" title="二、我们可能收到的信息"></a>二、我们可能收到的信息</h2><p>在您使用「开卷有益」客户端产品或服务的过程中，我们会收集部分使用信息并发往我们的服务器。我们的服务器收到的信息可划分为两类，一类是关于用户如何使用「开卷有益」产品的信息，另外一类是用户所拥有数据的汇总统计信息。我们收集信息是为了向所有用户提供更好的服务，其中既包括一些推断出来的基本信息（例如您使用的语言），也包括一些较为复杂的信息（例如您觉得哪些推广内容最有用、网上的哪些人对您最重要，或您可能喜欢哪些视频）。</p><p>我们有两种信息收集方式：</p><h3 id="（一）您向我们提供的信息"><a href="#（一）您向我们提供的信息" class="headerlink" title="（一）您向我们提供的信息"></a>（一）您向我们提供的信息</h3><p>我们的很多服务都要求您注册帐户，而当您注册帐户时，我们可能会要求您提供个人信息，例如姓名，昵称，电子邮件，有时候可能还需要提供身份证信息，以及其他个人信息，以向您提供完整的服务或技术支持。<br>您通过我们的服务向其他方分享的信息，以及其他通过我们的服务主动存储的信息，例如通过收藏功能所收藏并分享的信息，通过云存储服务存储的内容。</p><h3 id="（二）我们在您使用服务的过程中获取的信息"><a href="#（二）我们在您使用服务的过程中获取的信息" class="headerlink" title="（二）我们在您使用服务的过程中获取的信息"></a>（二）我们在您使用服务的过程中获取的信息</h3><p>我们会收集关于您使用的服务以及使用方式的信息，例如您何时观看了视频、何时访问了一个使用我们的推广服务的网站，或者何时查看了我们的推广内容并与之互动。以下具体介绍「开卷有益」产品可能会获得什么信息。</p><p>日志信息，指您使用我们的服务时，系统自动采集的技术信息，包括：</p><ul><li>硬件配置及软件版本。例如您的移动设备、网页浏览器或用于接入我们服务的其他程序所提供的配置信息、您的IP地址和移动设备所用的版本和设备识别码（IMEI）；</li><li>「开卷有益」软件及其他软件的信息。例如软件的版本，使用频率，使用的主要用途，</li><li>关于「开卷有益」软件功能的信息。 例如在使用过程中是否出现崩溃等软件故障，通过手机是否有效连接至电脑等问题，并对产品进行改进；</li><li>各功能的使用统计。 「开卷有益」在软件内提供了多种功能，我们使用这些数据来判断你对「开卷有益」各个功能的喜爱程度，评估我们的产品是否能符合你的使用习惯，并做出相应的改进；</li><li>数据同步、分享和储存。「开卷有益」提供的某些服务允许您同步、分享和储存数据，我们将会收集并储存您选择要上传、下载或实现这类功能的数据。</li><li>在使用我们服务时搜索或浏览的信息，例如您使用的网页搜索的关键词、访问的页面url地址，以及您在使用我们服务时浏览或要求提供的其他信息和内容详情；</li></ul><p>另外，在你使用某些特定功能时，有一些需要注意的地方：</p><ul><li>如果使用「开卷有益」时不幸发生崩溃，所发送的崩溃报告可能也会附加少量和你正在操作的数据相关的信息。这对我们进行诊断是必须的。</li><li>如果你通过「开卷有益」打开网页，网页可以获得标准日志信息，包括 IP 地址、cookies 等等。这和你使用普通浏览器是一样的。</li></ul><h2 id="三、我们如何使用您的个人信息"><a href="#三、我们如何使用您的个人信息" class="headerlink" title="三、我们如何使用您的个人信息"></a>三、我们如何使用您的个人信息</h2><p>「开卷有益」将严格遵守本隐私政策及其更新所载明的内容来使用您的个人信息。您的个人信息将仅用于收集时即已确定并且经过您同意的目的，如有除此之外的任何其他用途，我们都会提前征得您的同意。</p><ul><li><p>我们收集的个人信息将被用于确保我们产品和服务的功能和安全、验证您的身份、防止并追究欺诈或其他不当使用的情形。</p></li><li><p>我们收集的个人信息将被用于我们的产品和服务开发，尽管一般情况下，我们为此目的仅使用综合信息和统计性信息。</p></li><li><p>我们收集的个人信息将被用于与您进行交流，例如，在「开卷有益」产品或服务更新、发布的第一时间向您发出通知。</p></li><li><p>我们所收集的个人信息将被用于进行产品的个性化设计，并向您提供更为贴身的服务，例如：在我们的服务中自动进行推荐、展示专为您打造的内容和推广。</p></li></ul><h2 id="四、非个人信息的使用"><a href="#四、非个人信息的使用" class="headerlink" title="四、非个人信息的使用"></a>四、非个人信息的使用</h2><ul><li><p>对于我们收集的本身无法与任何特定个人直接建立联系的数据，诸如使用偏好、硬件配置、位置信息、软件操作信息等，可以帮助我们更好地了解用户行为，改进我们的产品、服务和推广宣传。</p></li><li><p>对于您通过「开卷有益」服务分享的其他信息，例如收藏并分享的应用信息等内容会根据具体产品的需要分享给第三方使用。</p></li></ul><h2 id="五、我们可能分享的信息"><a href="#五、我们可能分享的信息" class="headerlink" title="五、我们可能分享的信息"></a>五、我们可能分享的信息</h2><p>除以下情形外，未经您同意，「开卷有益」不会与任何第三方分享您的个人信息：</p><ul><li><p>出于提供「开卷有益」的服务或者履行我们在《服务协议》或本《隐私政策》中的义务和行使我们的权利，我们可能会与我们的合作伙伴等第三方（例如您的移动运营商）开展联合营销及其他沟通活动。为了避免重复或不必要的沟通，并为您量身定制相关信息，我们可能需要将「开卷有益」收集的信息与合作伙伴收集的信息进行匹配，但前提是法律允许这样做。</p></li><li><p>这些授权第三方不得将您的个人数据用于任何其他用途。 我们会要求他们遵照本政策行事，并采取适当的安全措施来保护您的个人数据。</p></li><li><p>随着我们业务的持续发展，我们以及我们的关联公司有可能进行合并、收购、资产转让或类似的交易，我们收集的相关信息有可能作为此类交易的一部分而被转移。</p></li><li><p>我们或我们的关联公司还可能为以下需要而使用或披露您的个人信息：</p></li><li><p>遵守适用的法律法规；</p></li><li>遵守法院命令或其他法律程序的规定；</li><li>遵守相关政府机关的要求；</li><li>为遵守适用的法律法规、维护社会公共利益，或保护我们的客户、我们或我们的集团公司、其他用户或雇员的人身和财产安全或合法权益所合理必需的用途。</li></ul><h2 id="六、未成年人信息保护"><a href="#六、未成年人信息保护" class="headerlink" title="六、未成年人信息保护"></a>六、未成年人信息保护</h2><p>我们鼓励父母或监护人指导未满十八岁的未成年人使用我们的服务。我们建议未成年人鼓励他们的父母或监护人阅读本《隐私政策》，并建议未成年人在提交的个人信息之前寻求父母或监护人的同意和指导。</p><h2 id="七、信息安全"><a href="#七、信息安全" class="headerlink" title="七、信息安全"></a>七、信息安全</h2><p>我们仅在本《隐私政策》所述目的所必需的期间和法律法规要求的时限内保留您的个人信息。我们使用各种安全技术和程序，以防信息的丢失、不当使用、未经授权阅览或披露。但请您理解，由于技术的限制以及可能存在的网络恶意手段，我们虽然尽力保护信息的安全，但是不可能始终保证信息的绝对安全。</p><h2 id="八、隐私政策的适用范围"><a href="#八、隐私政策的适用范围" class="headerlink" title="八、隐私政策的适用范围"></a>八、隐私政策的适用范围</h2><p>本《隐私政策》适用「开卷有益」软件内的所有服务。但是针对某些特定服务的隐私政策，我们将更具体地说明在该等服务中如何使用您的信息。如相关特定服务的隐私政策与本《隐私政策》有不一致之处，适用该特定服务的隐私政策。</p><p>请您注意，本《隐私政策》不适用于以下情况：</p><p>通过我们的服务而接入的第三方服务（包括任何第三方网站）收集的信息；<br>通过在我们服务中进行推广服务的其他公司或机构所收集的信息。</p><h2 id="九、变更"><a href="#九、变更" class="headerlink" title="九、变更"></a>九、变更</h2><p>我们可能适时修订本《隐私政策》的条款，我们将在修订生效前通过在主页上显著位置提示或向您发送电子邮件或以其他方式通知您。在向您进行通知之后，若您继续使用我们的服务，即表示同意受经修订的本《隐私政策》的约束。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;用户隐私保护政策&quot;&gt;&lt;a href=&quot;#用户隐私保护政策&quot; class=&quot;headerlink&quot; title=&quot;用户隐私保护政策&quot;&gt;&lt;/a&gt;用户隐私保护政策&lt;/h1&gt;&lt;h2 id=&quot;一、前言&quot;&gt;&lt;a href=&quot;#一、前言&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
      <category term="开卷有益" scheme="http://yoursite.com/categories/%E5%BC%80%E5%8D%B7%E6%9C%89%E7%9B%8A/"/>
    
    
  </entry>
  
  <entry>
    <title>「开卷有益」APP 用户服务协议</title>
    <link href="http://yoursite.com/2018/05/24/%E3%80%8C%E5%BC%80%E5%8D%B7%E6%9C%89%E7%9B%8A%E3%80%8DAPP-%E7%94%A8%E6%88%B7%E6%9C%8D%E5%8A%A1%E5%8D%8F%E8%AE%AE/"/>
    <id>http://yoursite.com/2018/05/24/「开卷有益」APP-用户服务协议/</id>
    <published>2018-05-24T10:49:43.000Z</published>
    <updated>2018-05-25T04:00:28.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="「开卷有益」APP-用户服务协议"><a href="#「开卷有益」APP-用户服务协议" class="headerlink" title="「开卷有益」APP 用户服务协议"></a>「开卷有益」APP 用户服务协议</h1><h2 id="条款"><a href="#条款" class="headerlink" title="条款"></a>条款</h2><ul><li><p>本最终用户条款（以下或简称「条款」）系由您与「开卷有益」APP 开发者（以下简称「开卷有益」）所订立的相关权利义务规范，用以描述「开卷有益」向您提供服务及您使用服务所涉及的详细规定。因此，请您于注册成为「开卷有益」用户或开始使用「开卷有益」提供服务前，切实详细地阅读本条款的所有内容。</p></li><li><p>只要您完成注册或开始使用「开卷有益」提供的任何服务，即表示您已无条件接受了本条款的相关规定及「开卷有益」就此公布的各项管理规定，并愿意受其约束。如果发生纠纷，您应自行承担事实上未认真阅读本条款的责任，不得以未仔细阅读为由进行抗辩。</p></li></ul><h2 id="服务内容"><a href="#服务内容" class="headerlink" title="服务内容"></a>服务内容</h2><ul><li><p>「开卷有益」通过不同软件或工具向您提供不同的服务。除非另有明确约定，「开卷有益」软件或服务的版本更新或增加新功能或服务，均自动适用本协议的约定。</p></li><li><p>「开卷有益」向您提供免费服务和收费服务。在提供收费服务前，「开卷有益」会向您给予明确提示，只有在您根据提示指示选择同意支付相关费用后，「开卷有益」才会向您提供该等收费服务。如果您拒绝支付相关费用，「开卷有益」有权不向您提供该等收费服务。</p></li><li><p>「开卷有益」的手机客户端在未经您许可的情况下不会使用 2G/3G/4G 网络流量。如果您许可「开卷有益」使用网络流量，产生的流量费用将由运营商收取，「开卷有益」不会在其中得到收益。您应当自行负担使用「开卷有益」服务所需的设备（例如个人手机、及其他与接入互联网或移动网有关的装置）及所需的费用（如为接入互联网而支付的电话费及上网费、为使用移动网而支付的手机费。</p></li></ul><h2 id="用户账号"><a href="#用户账号" class="headerlink" title="用户账号"></a>用户账号</h2><ul><li><p>您在「开卷有益」进行注册时，须根据「开卷有益」要求提供相应的注册信息。为了获得「开卷有益」的完整服务，您应提供真实的身份识别资料，并应在前述资料发生变更时，及时进行线上更新。若您所提供的资料与事实不符或所提供的资料业已变更而未更新或有任何误导之嫌而导致「开卷有益」无法为您提供或继续提供服务的，您应自行承担由此引发的损失而与「开卷有益」无关。</p></li><li><p>您须了解和认可，「开卷有益」账号的所有权归「开卷有益」所有，「开卷有益」账号的使用权仅归属于原始注册人。未经「开卷有益」的事先书面同意，您不得以任何形式将「开卷有益」账号及密码转让、赠予、出借、售卖予第三方或者以其他方式许可非初始注册人对其进行使用，否则「开卷有益」有权封禁、删除该账号。如您并非当前所使用「开卷有益」账号的原始注册人，您应立即停止对该账号的一切使用及操作，同时「开卷有益」有权依原始注册人之请求或依自身判断将该账号重新交予原始注册人使用，由此引发的全部责任及损失与「开卷有益」无关。</p></li><li><p>您有义务妥善保管在注册时获得的账号及密码，如因黑客、第三人行为或您自身保管疏忽导致账号、密码遭他人非法使用并给您造成损失的，「开卷有益」就此不承担任何责任。</p></li><li><p>如您发现自身账号遭他人非法使用或有异常使用的情形，应立即通知「开卷有益」，并提供与原始注册人相一致的个人有效身份信息。「开卷有益」在核实您所提供的个人有效身份信息后，将尽可能为您维护自身合法权利提供必要协助，但「开卷有益」并不承诺您一定能通过该途径找回「开卷有益」账号。</p></li></ul><h2 id="使用规则"><a href="#使用规则" class="headerlink" title="使用规则"></a>使用规则</h2><ul><li>您应就自身使用「开卷有益」服务的行为负责，并保证在使用「开卷有益」服务的过程中遵循以下原则：</li><li>遵守中国有关的法律和法规；</li><li>遵守本条款及「开卷有益」发布的相关管理规定；</li><li>不得以任何形式侵犯第三方及「开卷有益」的合法利益；</li><li><p>不得将「开卷有益」提供的服务用于任何非法或侵权活动，包括但不限于将其用于展示、传播包含色情、种族主义、低级趣味、淫秽、诽谤中伤、污辱性质的资料，以及传播任何针对宗教、民族传统、人种、性别、年龄的各种仇恨、歧视和偏见的内容。</p></li><li><p>「开卷有益」有权对您使用服务的情况进行审查和监督，如「开卷有益」根据自身独立判断认为您存在违法或违约行为的，有权要求您纠正相应行为，并采取一切必要的措施（包括但不限于更改或删除您发布或上传的内容、暂停或终止您使用「开卷有益」服务的权利等）以减轻您行为造成的影响。但您确认，「开卷有益」的审查行为并不为其设置任何责任，也不免除您的任何义务。</p></li><li><p>您应保证自身对本软件的使用行为的合法性、正当性，且不得对客户端进行反编译、反汇编、破解等行为。</p></li><li><p>请勿滥用或干扰本软件服务，包括但不限于将本软件服务用于非法目的，篡改与本软件相关的计算机代码，使用与「开卷有益」的标志或文字，攻击「开卷有益」的服务器，删除、隐藏或修改任何与本软件服务相关的声明等。</p></li><li><p>您须了解并认可，在您使用「开卷有益」服务公开发表内容(例如评论)时，须遵守社会公序良德和相关法律法规，且不得发布和上传如下内容：</p></li><li>违反宪法确定的基本原则的</li><li>违反我国法律、法规及其它规定的</li><li>违背社会公序良俗，有损社会公共利益的</li><li>侵害第三方合法权益的文件或信息，包括但不限于病毒代码、黑客程序、软件破解注册信息等</li><li>未获合法授权的文章、图片、音乐、视频、应用等</li><li>违法或骚扰性的广告内容或链接</li><li><p>违反「开卷有益」信息发布政策或损害「开卷有益」合法权益的</p></li><li><p>「开卷有益」有权对您发布和上传的内容进行审核，如「开卷有益」根据自身独立判断认为您所发布、上传的内容包含前述情况的，有权直接删除相关内容，且无需另行通知您。您在此确认，「开卷有益」的审核行为并不为其设置任何义务，也不能免除您的任何责任。</p></li><li><p>由于您发布上传的内容带来的法律纠纷或其它后果，需要由您自行承担，您需对此为「开卷有益」提供充分免责。</p></li><li><p>您在使用「开卷有益」过程中创作内容所包含的权利将依法归您自行所有。但您应了解，对于您通过「开卷有益」服务发布、上传至可公开获取区域的任何内容，均视为您已同意授权「开卷有益」获得相应内容在全世界范围内免费的、永久性的、不可撤销的、非独家的和完全再许可的权利和许可，以使用、复制、修改、改编、出版、翻译、据以创作衍生作品、传播、表演和展示此等内容（整体或部分），和/或将此等内容编入当前已知的或以后开发的其他任何形式的作品、媒体或技术中。</p></li><li><p>如果「开卷有益」根据自身独立判断认为您对「开卷有益」的使用超出了合理范围，我们有权对您就「开卷有益」服务的使用进行限制，您应自行承担由此引发的责任及损失。</p></li></ul><h2 id="隐私"><a href="#隐私" class="headerlink" title="隐私"></a>隐私</h2><ul><li><p>「开卷有益」非常重视用户的个人数据和隐私保护，承诺将采取必要措施保护您存放在「开卷有益」服务器上的个人数据及隐私信息的安全。</p></li><li><p>关于您使用「开卷有益」产品的程中「开卷有益」可能收集的数据信息，请阅《「开卷有益」隐私政策》。该《隐私政策》属于本协议的必要组成部分。</p></li><li><p>除本协议和《「开卷有益」隐私政策》中规定情况外，「开卷有益」保证不对外公开或向第三方提供、公开或共享您的个人数据及隐私信息。</p></li></ul><h2 id="知识产权"><a href="#知识产权" class="headerlink" title="知识产权"></a>知识产权</h2><ul><li><p>「开卷有益」非常重视保护自身的知识产权，同时非常注重保护第三方的知识产权相关合法权益。「开卷有益」自身所提供服务的相关著作权、专利权、商标、商业秘密及其它任何所有权或权利（包括但不限于「开卷有益」客户端软件、我们对应用的排序等），均由「开卷有益」独占性所有。非经「开卷有益」的同意，您不得将其用于「开卷有益」书面许可外用途（包括但不限于用于违法活动，或进行反向工程等）。</p></li><li><p>使用「开卷有益」提供的服务并不会使您获得或拥有任何属于我们或第三方的知识产权。「开卷有益」所链接的所有内容的所有权利均属于作者或第三方网站，请勿传播、复制、改编、修改或以其他方式不当使用他人作品，包括但不限于转载、链接、下载、复制、编辑、修改、变更、上传、分享、发行、表演、衍生其他作品、创作衍生品、诋毁、破坏作品技术保护措施等。</p></li><li><p>关于知识产权的具体约定请阅《「开卷有益」知识产权保护声明》。该声明是本协议的必要组成部分。</p></li></ul><h2 id="免责声明"><a href="#免责声明" class="headerlink" title="免责声明"></a>免责声明</h2><ul><li><p>对于「开卷有益」所展示的来自于第三方网站的内容（如视频、音乐、应用等）、用户存储的内容、用户发布的内容（如图片、评论），以及这些内容链接或指向的其他内容（如广告、推广）等非「开卷有益」直接提供的内容，我们对其合法性、准确性、完整性和可靠性概不负责，亦不承担任何法律责任，亦不对该等内容作出任何明示或默示的保证，包括但不限于有关所有权、质量、没有侵犯第三方权利、没有病毒的保证。</p></li><li><p>「开卷有益」将以最大努力向您提供稳定的服务，但您应对使用「开卷有益」软件和服务的结果自行承担风险，「开卷有益」对此不做任何承诺或保证，不保证服务不中断，对您的数据损失、丢失或服务停止不承担任何责任，由于网络带宽、手机（或其他电子设备）硬件限制等任何原因造成您无法正常使用本软件，「开卷有益」不承担任何法律责任。</p></li><li><p>如果「开卷有益」提供了一些特别有风险的功能，我们可能会额外请您确认。如果您点选确认或实际使用相应功能的，将视为您已了解并愿意承担相应风险。如您由此遭受实际损失的，须自行承担有关损失。</p></li></ul><h2 id="服务变更、中断与终止"><a href="#服务变更、中断与终止" class="headerlink" title="服务变更、中断与终止"></a>服务变更、中断与终止</h2><ul><li><p>「开卷有益」所提供的服务存在因包括不可抗力、计算机病毒或黑客攻击、系统不稳定、您所在位置、通信线路、「开卷有益」自身运营调整、合作伙伴调整等因素造成的服务中断或不能满足您要求的风险。</p></li><li><p>「开卷有益」可能随时变更、中断或终止部分或全部的服务且无需另行对您进行通知，请注意定期对您存放在「开卷有益」网络服务上的数据进行备份，以避免损失。<br>如您欲使用「开卷有益」提供的服务，须承担以上风险，「开卷有益」对您或任何第三人由此遭受的损害均不承担赔偿责任。</p></li></ul><h2 id="法律适用和争议解决"><a href="#法律适用和争议解决" class="headerlink" title="法律适用和争议解决"></a>法律适用和争议解决</h2><ul><li>本协议的解释、效力及纠纷的解决，适用于中华人民共和国（不包括港澳台地区）法律。因使用「开卷有益」服务产生的或与此相关的纠纷，「开卷有益」及您均有权将其提交至上海仲裁委员会通过仲裁方式解决。仲裁裁决是终局的，对各方均有约束力。</li></ul><h2 id="协议的变更和修改"><a href="#协议的变更和修改" class="headerlink" title="协议的变更和修改"></a>协议的变更和修改</h2><ul><li>「开卷有益」有权随时对本协议及其组成部分进行修改，并且一旦发生协议条款的变更，一旦相应内容发生变动，「开卷有益」将官网网站内进行公示或在「开卷有益」软件内提示您。您如果不同意本协议的修改，应当立即停止使用「开卷有益」服务；如果您选择在本协议变更后继续使用「开卷有益」服务，则视为您已经接受并愿意遵守本协议的修改。</li></ul><h2 id="其他规定"><a href="#其他规定" class="headerlink" title="其他规定"></a>其他规定</h2><ul><li>如依据我国法律法规的相关规定，本条款内任何规定被判定为部分或全部无效时，不影响其它规定的效力。</li><li>「开卷有益」未对您的违约行为采取制止行为或者追究责任的，并不意味着「开卷有益」放弃了协议下的该等权利。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;「开卷有益」APP-用户服务协议&quot;&gt;&lt;a href=&quot;#「开卷有益」APP-用户服务协议&quot; class=&quot;headerlink&quot; title=&quot;「开卷有益」APP 用户服务协议&quot;&gt;&lt;/a&gt;「开卷有益」APP 用户服务协议&lt;/h1&gt;&lt;h2 id=&quot;条款&quot;&gt;&lt;a hr
      
    
    </summary>
    
      <category term="开卷有益" scheme="http://yoursite.com/categories/%E5%BC%80%E5%8D%B7%E6%9C%89%E7%9B%8A/"/>
    
    
  </entry>
  
  <entry>
    <title>启发日报 第15期 2018/04/30</title>
    <link href="http://yoursite.com/2018/05/01/%E5%90%AF%E5%8F%91%E6%97%A5%E6%8A%A5-%E7%AC%AC15%E6%9C%9F-2018-04-30/"/>
    <id>http://yoursite.com/2018/05/01/启发日报-第15期-2018-04-30/</id>
    <published>2018-05-01T13:29:15.000Z</published>
    <updated>2018-05-01T13:30:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天推荐给大家的是关于Navigation Bar或者Tab Bar遮挡View的问题。关键就在于</p><ul><li>edgesForExtendedLayout</li><li>translucent</li><li>extendedLayoutIncludesOpaqueBars</li><li>automaticallyAdjustsScrollViewInsets(iOS 11为contentInsetAdjustmentBehavior)<br>下面这篇文章有一个很好的演示和总结：</li></ul><p>#####基础知识：<a href="https://www.jianshu.com/p/9f1d8fab82c4" target="_blank" rel="noopener">导航栏遮住View问题的详细总结(已更新iOS11)</a></p><p>同时，这篇文章也不错：<br><a href="http://ios.jobbole.com/90851/" target="_blank" rel="noopener">iOS 导航栏的那些事儿</a></p><p>既然谈到了Navigation Bar，那么我们就多聊聊导航栏的事吧。</p><p>首先，苹果的官方文档，好好读下，基本上就应该什么都了解了：<br><a href="https://developer.apple.com/documentation/uikit/uinavigationcontroller" target="_blank" rel="noopener">UINavigationController</a><br><a href="https://developer.apple.com/documentation/uikit/uinavigationbar#//apple_ref/occ/instm/UINavigationBar/pushNavigationItem:animated:" target="_blank" rel="noopener">UINavigationBar</a><br><a href="https://developer.apple.com/documentation/uikit/uinavigationitem#//apple_ref/occ/cl/UINavigationItem" target="_blank" rel="noopener">UINavigationItem</a></p><p>不喜欢看英文的可以参考下面几片文章：<br><a href="https://www.jianshu.com/p/d878c237aada" target="_blank" rel="noopener">iOS 导航栏 知识总结</a><br><a href="https://www.jianshu.com/p/b7818eba288c" target="_blank" rel="noopener">iOS 自定义导航栏笔记</a></p><p>最后推荐一些导航栏的特效的实现以及第三方库：<br><a href="https://www.jianshu.com/p/540a7e6f7b40" target="_blank" rel="noopener">超简单！！！ iOS设置状态栏、导航栏按钮、标题、颜色、透明度，偏移等</a></p><p>#####第三方库推荐： <strong><a href="https://github.com/wangrui460/WRNavigationBar" target="_blank" rel="noopener">WRNavigationBar</a></strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天推荐给大家的是关于Navigation Bar或者Tab Bar遮挡View的问题。关键就在于&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;edgesForExtendedLayout&lt;/li&gt;
&lt;li&gt;translucent&lt;/li&gt;
&lt;li&gt;extendedLayoutInclude
      
    
    </summary>
    
      <category term="启发日报" scheme="http://yoursite.com/categories/%E5%90%AF%E5%8F%91%E6%97%A5%E6%8A%A5/"/>
    
    
      <category term="第三方框架" scheme="http://yoursite.com/tags/%E7%AC%AC%E4%B8%89%E6%96%B9%E6%A1%86%E6%9E%B6/"/>
    
      <category term="基础知识点" scheme="http://yoursite.com/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
  </entry>
  
  <entry>
    <title>启发日报 第14期 2018/04/27</title>
    <link href="http://yoursite.com/2018/04/30/%E5%90%AF%E5%8F%91%E6%97%A5%E6%8A%A5-%E7%AC%AC14%E6%9C%9F-2018-04-27/"/>
    <id>http://yoursite.com/2018/04/30/启发日报-第14期-2018-04-27/</id>
    <published>2018-04-30T12:05:32.000Z</published>
    <updated>2018-04-30T12:07:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>写了那么多的block，却从来没有特别系统的去学习过block。事实上是看过一些的，block的语法部分还可以理解，但每次看到底层实现时，总会被弄的晕乎乎的。今天打算花一点时间，好好的学习一下。主要是参考《Objective-C 高级编程 iOS与OS X多线程和内存管理》一书的第二章“Blocks”。主要包括：</p><ul><li>blocks概要</li><li>blocks模式</li><li>blocks的实现</li></ul><p>大家可以自己买书看，或者可以先看看这篇读后笔记：<br><a href="https://www.jianshu.com/p/d28a5633b963" target="_blank" rel="noopener">iOS Block用法和实现原理</a></p><p>唐巧也写了一篇block原理的博客，我觉得比书更容易理解一些，大家也可以阅读。<br><a href="http://blog.devtang.com/2013/07/28/a-look-inside-blocks/" title="谈Objective-C block的实现" target="_blank" rel="noopener">谈Objective-C block的实现</a></p><p>习惯看英文的同学，也推荐看下面这三篇</p><ul><li><a href="http://www.galloway.me.uk/2012/10/a-look-inside-blocks-episode-1/" target="_blank" rel="noopener">A look inside blocks: Episode 1</a></li><li><a href="http://www.galloway.me.uk/2012/10/a-look-inside-blocks-episode-2/" target="_blank" rel="noopener">A look inside blocks: Episode 2</a></li><li><a href="http://www.galloway.me.uk/2013/05/a-look-inside-blocks-episode-3-block-copy/" target="_blank" rel="noopener">A look inside blocks: Episode 3</a></li></ul><p>以及苹果的官方文档：<br><a href="https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/Blocks/Articles/00_Introduction.html#//apple_ref/doc/uid/TP40007502" target="_blank" rel="noopener">Blocks Programming Topics</a><br><a href="https://developer.apple.com/library/content/featuredarticles/Short_Practical_Guide_Blocks/index.html#//apple_ref/doc/uid/TP40009758" target="_blank" rel="noopener">A Short Practical Guide to Blocks</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;写了那么多的block，却从来没有特别系统的去学习过block。事实上是看过一些的，block的语法部分还可以理解，但每次看到底层实现时，总会被弄的晕乎乎的。今天打算花一点时间，好好的学习一下。主要是参考《Objective-C 高级编程 iOS与OS X多线程和内存管理》
      
    
    </summary>
    
      <category term="启发日报" scheme="http://yoursite.com/categories/%E5%90%AF%E5%8F%91%E6%97%A5%E6%8A%A5/"/>
    
    
      <category term="基础知识点" scheme="http://yoursite.com/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
  </entry>
  
  <entry>
    <title>启发日报 第13期 2018/04/26</title>
    <link href="http://yoursite.com/2018/04/26/%E5%90%AF%E5%8F%91%E6%97%A5%E6%8A%A5-%E7%AC%AC13%E6%9C%9F-2018-04-26/"/>
    <id>http://yoursite.com/2018/04/26/启发日报-第13期-2018-04-26/</id>
    <published>2018-04-26T12:28:13.000Z</published>
    <updated>2018-04-26T12:29:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>做iOS开发，避免不了用户注册，登录页面。业务逻辑别论，UI的实现上肯定涉及到<a href="https://developer.apple.com/documentation/uikit/uitextfield" target="_blank" rel="noopener">UITextField</a>。看上去很简单，可有时候不少功能还是挺折腾的。所以今天要推荐的第几篇是关于UITextField的。</p><p>#####基础知识：<a href="https://www.jianshu.com/p/fe95f7e64b89" target="_blank" rel="noopener">iOS-UITextField 全面解析</a><br>我更推荐看<a href="https://developer.apple.com/documentation/uikit/uitextfield" target="_blank" rel="noopener">UITextField</a>，不过这篇的总结非常直观，就当API参考了。</p><p>#####拓展：iOS开发-UITextField的那点事(<a href="https://www.jianshu.com/p/4b9957f2afc2" target="_blank" rel="noopener">https://www.jianshu.com/p/4b9957f2afc2</a>)<br>这是一篇UITextField的拓展文章，主要是关于输入控制，以及键盘遮盖问题。常见的就是我们需要限制输入长度或者输入的文本类型。或许这里面的探讨可以给您一些启示。</p><p>#####拓展：<a href="https://blog.csdn.net/sevenquan/article/details/50488623" target="_blank" rel="noopener">iOS登录注册登录界面（UITextField）</a><br>然后是这一篇，是在开发登录界面时，一个开发者的考虑，里面有一些细节的点，非常值得学习，例如键盘的类型选择等，从用户的角度触发，来设置方便用户的值。</p><p>#####第三方库推荐： <strong><a href="https://github.com/hackiftekhar/IQKeyboardManager" target="_blank" rel="noopener">IQKeyboardManager</a></strong><br>既然说起了键盘遮挡的问题，那么向大家推荐下面这个第三方库，非常简单实用。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;做iOS开发，避免不了用户注册，登录页面。业务逻辑别论，UI的实现上肯定涉及到&lt;a href=&quot;https://developer.apple.com/documentation/uikit/uitextfield&quot; target=&quot;_blank&quot; rel=&quot;noopene
      
    
    </summary>
    
      <category term="启发日报" scheme="http://yoursite.com/categories/%E5%90%AF%E5%8F%91%E6%97%A5%E6%8A%A5/"/>
    
    
      <category term="第三方框架" scheme="http://yoursite.com/tags/%E7%AC%AC%E4%B8%89%E6%96%B9%E6%A1%86%E6%9E%B6/"/>
    
      <category term="基础知识点" scheme="http://yoursite.com/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
      <category term="拓展" scheme="http://yoursite.com/tags/%E6%8B%93%E5%B1%95/"/>
    
  </entry>
  
  <entry>
    <title>启发日报 第12期 2018/04/25</title>
    <link href="http://yoursite.com/2018/04/25/%E5%90%AF%E5%8F%91%E6%97%A5%E6%8A%A5-%E7%AC%AC12%E6%9C%9F-2018-04-25/"/>
    <id>http://yoursite.com/2018/04/25/启发日报-第12期-2018-04-25/</id>
    <published>2018-04-25T11:40:22.000Z</published>
    <updated>2018-04-25T11:43:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天首先推荐的是基础内容，事实上大家对NSArray, NSSet, NSOrderedSet 和 NSDictionary这些类已经用的非常熟悉了，但是这篇文章肯定有您不知道的内容：来自Objc.io中国的一篇关于基础集合类的文章，虽然是15年的文章，但其含金量还是足足的。</p><p>#####基础知识：<a href="https://www.objccn.io/issue-7-1/" target="_blank" rel="noopener">基础集合类</a></p><p>第二个想推荐给大家的和技术无关，是在CocoaChina上看到的一篇关于如何学习iOS的文章，励志成为全栈开发的同学们可以看看怎么学习</p><p>#####学习:<a href="http://www.cocoachina.com/ios/20180425/23164.html" target="_blank" rel="noopener">浅谈iOS进阶路线</a><br>一直都是在菜鸟的路途中徘徊，看了这篇，瞬间被击溃了。漫漫路，虽然上了年纪，但还是得一步一个脚印去努力。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天首先推荐的是基础内容，事实上大家对NSArray, NSSet, NSOrderedSet 和 NSDictionary这些类已经用的非常熟悉了，但是这篇文章肯定有您不知道的内容：来自Objc.io中国的一篇关于基础集合类的文章，虽然是15年的文章，但其含金量还是足足的
      
    
    </summary>
    
      <category term="启发日报" scheme="http://yoursite.com/categories/%E5%90%AF%E5%8F%91%E6%97%A5%E6%8A%A5/"/>
    
    
      <category term="基础知识点" scheme="http://yoursite.com/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
      <category term="学习" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>启发日报 第11期 2018/04/24</title>
    <link href="http://yoursite.com/2018/04/25/%E5%90%AF%E5%8F%91%E6%97%A5%E6%8A%A5-%E7%AC%AC11%E6%9C%9F-2018-04-24/"/>
    <id>http://yoursite.com/2018/04/25/启发日报-第11期-2018-04-24/</id>
    <published>2018-04-25T11:40:14.000Z</published>
    <updated>2018-04-25T11:41:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>昨天有点偷懒，所以没有按时写完第11期。事实上是昨天忙着别的事情了，没有时间去阅读一些文章，因此也不知道推荐什么。</p><p>因此，今天首要的任务是把昨天没完成的补上。</p><p>今天在重构本地缓存相关的类，有用到Sqlite以及NSCache。重构的时候，就在考虑是不是有更好的第三方库，因此今天推荐给大家的是</p><p>#####第三方库推荐：<a href="https://github.com/ibireme/YYCache" target="_blank" rel="noopener">YYCache</a><br>同时，作者还非常贴心的把设计思路分享给了大家：<a href="https://blog.ibireme.com/2015/10/26/yycache/" target="_blank" rel="noopener">YYCache 设计思路</a>.<br>在阅读的时候，有非常多的内容可以拓展，比如LRU算法，线程锁等等。大家可以自行查阅相关内容。</p><p>#####练习：如何把delegate形式转成block形式<br>以后可能会有这种类型的推荐，也就是会把平常遇到的一些问题提出来，和大家一起讨论和练习。<br>项目用到了 <strong><a href="https://github.com/mwaterfall/MWFeedParser" target="_blank" rel="noopener">MWFeedParser</a></strong>这个第三方库，但是他提供的是delegate形式的callback，很想改成block形式的，大家觉得应该怎么改？</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;昨天有点偷懒，所以没有按时写完第11期。事实上是昨天忙着别的事情了，没有时间去阅读一些文章，因此也不知道推荐什么。&lt;/p&gt;
&lt;p&gt;因此，今天首要的任务是把昨天没完成的补上。&lt;/p&gt;
&lt;p&gt;今天在重构本地缓存相关的类，有用到Sqlite以及NSCache。重构的时候，就在考虑
      
    
    </summary>
    
      <category term="启发日报" scheme="http://yoursite.com/categories/%E5%90%AF%E5%8F%91%E6%97%A5%E6%8A%A5/"/>
    
    
      <category term="第三方框架" scheme="http://yoursite.com/tags/%E7%AC%AC%E4%B8%89%E6%96%B9%E6%A1%86%E6%9E%B6/"/>
    
      <category term="练习" scheme="http://yoursite.com/tags/%E7%BB%83%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>启发日报 第10期 2018/04/23</title>
    <link href="http://yoursite.com/2018/04/23/%E5%90%AF%E5%8F%91%E6%97%A5%E6%8A%A5-%E7%AC%AC10%E6%9C%9F-2018-04-23/"/>
    <id>http://yoursite.com/2018/04/23/启发日报-第10期-2018-04-23/</id>
    <published>2018-04-23T10:54:57.000Z</published>
    <updated>2018-04-23T10:55:37.000Z</updated>
    
    <content type="html"><![CDATA[<p>因为在重构自己的代码，所以周末的时候有在看MVVM以及ReactiveCocoa，考虑是否用MVVM重构下自己的代码，并考虑是否引入ReactiveCocoa。因为ReactiveCocoa的学习成本高，而且调试困难，所以一直都在由于。今天看了<a href="http://blog.leichunfeng.com/" target="_blank" rel="noopener">雷纯锋</a>的这篇技术博客，确实给自己增强了不少信心。所以，就开始吧，希望重构完成之后，也能给出一篇博客来介绍重构的过程以及自己学习ReactiveCocoa的过程。</p><p>今天推荐给大家的主菜就是：</p><p>#####架构：<a href="http://blog.leichunfeng.com/blog/2016/02/27/mvvm-with-reactivecocoa/" target="_blank" rel="noopener">MVVM With ReactiveCocoa</a></p><p>此外，还有三篇文章，我觉得还不错，对于入门和概念了解有帮助：</p><p><a href="http://www.cocoachina.com/ios/20170612/19500.html" target="_blank" rel="noopener">iOS 关于MVC和MVVM设计模式的那些事</a><br><a href="http://www.cocoachina.com/ios/20170628/19664.html" target="_blank" rel="noopener">iOS 关于MVVM Without ReactiveCocoa设计模式的那些事 </a><br><a href="http://www.cocoachina.com/ios/20170704/19714.html" target="_blank" rel="noopener">iOS 关于MVVM With ReactiveCocoa设计模式的那些事</a></p><p>今天的内容就这些了，我想这些内容大家上下班的时候看已经足够了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;因为在重构自己的代码，所以周末的时候有在看MVVM以及ReactiveCocoa，考虑是否用MVVM重构下自己的代码，并考虑是否引入ReactiveCocoa。因为ReactiveCocoa的学习成本高，而且调试困难，所以一直都在由于。今天看了&lt;a href=&quot;http:/
      
    
    </summary>
    
      <category term="启发日报" scheme="http://yoursite.com/categories/%E5%90%AF%E5%8F%91%E6%97%A5%E6%8A%A5/"/>
    
    
      <category term="架构" scheme="http://yoursite.com/tags/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>启发日报 第9期 2018/04/20</title>
    <link href="http://yoursite.com/2018/04/20/%E5%90%AF%E5%8F%91%E6%97%A5%E6%8A%A5-%E7%AC%AC9%E6%9C%9F-2018-04-20/"/>
    <id>http://yoursite.com/2018/04/20/启发日报-第9期-2018-04-20/</id>
    <published>2018-04-20T12:12:53.000Z</published>
    <updated>2018-04-20T12:13:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>周五了，发现如果要认真推荐一些帖子的话，每天还真得浏览不少文章。今天也没有想到特别的主题。前几天有在写UIButton的时候，遇到了上图下字的需求，着实花了一点功夫去看怎么修改UIButton的布局。所以，即便是小小的UIButton控件，也总有那么一些特别的需求，再回想起令人抓狂的UINavigationBar，UITabbar等等，所以想整理下关于各个控件介绍的优秀文章，今天就有了今天的第一篇：</p><p>#####基础知识点：<a href="https://blog.csdn.net/chendehao001/article/details/52072596" target="_blank" rel="noopener">你真的会用UIButton吗? UIButton详细介绍</a><br>文章的内容包括：</p><ul><li>什么是UIButton</li><li>UIButton的状态</li><li>UIButton的属性设置</li><li>UIButton基本使用步骤</li><li>UIButton的代码创建与常用属性设置</li><li>重写按钮的某个状态属性的 setter 或 getter 方法设置按钮的状态</li><li>调整UIButton内部布局</li></ul><p>#####基础知识点：<a href="https://www.objccn.io/issue-9-4/" target="_blank" rel="noopener">字符串解析</a><br>项目中需要解析字符串中是否含有符合某些特殊规则的字符串，因此想到了正则表达式。所以在这推荐给大家一篇赖在Objc.io的文章。</p><p>#####第三方库推荐：<a href="https://github.com/vikmeup/SCLAlertView-Swift" target="_blank" rel="noopener">SCLAlertView-Swift</a>/<a href="https://github.com/dogo/SCLAlertView" target="_blank" rel="noopener">SCLAlertView</a><br>好看又好用的AlertView，话不多少，上图，至于怎么用，去Github上下载Demo吧。</p><p><img src="https://upload-images.jianshu.io/upload_images/1771779-a30e9d492e799ff1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br><img src="https://upload-images.jianshu.io/upload_images/1771779-1d8128d1c9247a96.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;周五了，发现如果要认真推荐一些帖子的话，每天还真得浏览不少文章。今天也没有想到特别的主题。前几天有在写UIButton的时候，遇到了上图下字的需求，着实花了一点功夫去看怎么修改UIButton的布局。所以，即便是小小的UIButton控件，也总有那么一些特别的需求，再回想起
      
    
    </summary>
    
      <category term="启发日报" scheme="http://yoursite.com/categories/%E5%90%AF%E5%8F%91%E6%97%A5%E6%8A%A5/"/>
    
    
      <category term="第三方框架" scheme="http://yoursite.com/tags/%E7%AC%AC%E4%B8%89%E6%96%B9%E6%A1%86%E6%9E%B6/"/>
    
      <category term="基础知识点" scheme="http://yoursite.com/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
  </entry>
  
  <entry>
    <title>启发日报 第8期 2018/04/19</title>
    <link href="http://yoursite.com/2018/04/19/%E5%90%AF%E5%8F%91%E6%97%A5%E6%8A%A5-%E7%AC%AC8%E6%9C%9F-2018-04-19/"/>
    <id>http://yoursite.com/2018/04/19/启发日报-第8期-2018-04-19/</id>
    <published>2018-04-19T11:53:32.000Z</published>
    <updated>2018-04-19T11:54:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>在这个浮躁的年代，现在能静下心来写博客的人不多了。曾今的大牛博客，现在更新的寥寥无几。我的订阅列表里，现在还能坚持更新的，恐怕也就唐巧大大了。前两天又更新了一篇，虽然唐巧现在没有专注在iOS开发这一块，不过不管是技术文章，还是他的读书笔记，又或者年终总结，他的博客的内容还是有很高的质量的，所以今天要推荐给大家的第一篇是：</p><p>#####思考： <a href="http://blog.devtang.com/2018/04/16/operation-light-summary/" title="运营启蒙 - 读《运营之光》" target="_blank" rel="noopener">运营启蒙 - 读《运营之光》</a><br>我想每个程序员，也该学一点运营的知识，因此，哪怕你没打算读这本书，那么花十分钟看看读书笔记，来吸收这本书的精华吧。</p><p>#####基础知识点：<a href="https://www.jianshu.com/p/83770200d476" target="_blank" rel="noopener">深入理解iOS NSNotification</a><br>NSNotification在平时开发中使用非常频繁，很多时候我们都知道他怎么用，但不一定知道他到底是怎么回事，这篇文章的作者非常的用心，为大家展示了NSNotification背后的故事。相信大家读完之后，对NSNotification会有一个更深层次的认识。</p><p>#####第三方库推荐：<a href="https://github.com/ko1o/PYSearch" target="_blank" rel="noopener">PYSearch</a><br>一个非常优雅的搜索控制器iOS框架，我一直有用，所以也推荐给大家使用。</p><ul><li>支持各种热门搜索风格</li><li>支持多种搜索历史风格</li><li>支持各种搜索结果显示模式</li><li>支持搜索建议</li><li>支持搜索历史缓存</li><li>支持使用delegate或block完成搜索的回调</li><li>支持CocoaPods</li><li>支持多语言</li><li>支持横屏或者竖屏的iPhone或iPad</li></ul><p><img src="https://upload-images.jianshu.io/upload_images/1771779-6245e474c54b4936.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在这个浮躁的年代，现在能静下心来写博客的人不多了。曾今的大牛博客，现在更新的寥寥无几。我的订阅列表里，现在还能坚持更新的，恐怕也就唐巧大大了。前两天又更新了一篇，虽然唐巧现在没有专注在iOS开发这一块，不过不管是技术文章，还是他的读书笔记，又或者年终总结，他的博客的内容还是
      
    
    </summary>
    
      <category term="启发日报" scheme="http://yoursite.com/categories/%E5%90%AF%E5%8F%91%E6%97%A5%E6%8A%A5/"/>
    
    
      <category term="第三方框架" scheme="http://yoursite.com/tags/%E7%AC%AC%E4%B8%89%E6%96%B9%E6%A1%86%E6%9E%B6/"/>
    
      <category term="基础知识点" scheme="http://yoursite.com/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
      <category term="思考" scheme="http://yoursite.com/tags/%E6%80%9D%E8%80%83/"/>
    
  </entry>
  
  <entry>
    <title>启发日报 第7期 2018/04/18</title>
    <link href="http://yoursite.com/2018/04/18/%E5%90%AF%E5%8F%91%E6%97%A5%E6%8A%A5-%E7%AC%AC7%E6%9C%9F-2018-04-18/"/>
    <id>http://yoursite.com/2018/04/18/启发日报-第7期-2018-04-18/</id>
    <published>2018-04-18T12:13:24.000Z</published>
    <updated>2018-04-18T12:14:13.000Z</updated>
    
    <content type="html"><![CDATA[<p>程序员总是在不停的翻新自己的代码，貌似我有点强迫症，有时候一个分行，一个空格都要按照自己预想的修改。今天的工作是在做代码的重构，合并公共代码，修改方法调用，调整架构等等。所以，今天想向大家推荐的是关于MVC/MVP/MVVM以及VIPER的文章。</p><p>#####架构：<a href="https://juejin.im/post/5ad1b93d518825557b4d2d44" target="_blank" rel="noopener">[译]iOS架构模式——解密MVC、MVP、MVVM和VIPER</a><br>翻译稍微有点笔误，如果大家更喜欢看英文并且有翻墙工具，那么就去直接看原文吧：<a href="https://medium.com/ios-os-x-development/ios-architecture-patterns-ecba4c38de52" target="_blank" rel="noopener">https://medium.com/ios-os-x-development/ios-architecture-patterns-ecba4c38de52</a></p><p>#####基础知识点：<a href="http://www.cocoachina.com/ios/20170809/20187.html" target="_blank" rel="noopener">iOS绘图框架CoreGraphics分析</a><br>平常UIKit用多了，但其底层的依赖CoreGraphics，却涉及不多。如果你初次接触CoreGraphics框架，那么推荐您看看这篇文章，深入浅出的介绍了iOS的绘图方法和分析一下CoreGraphics框架的绘图原理。</p><p>#####思考：<a href="http://limboy.me/essay/2018/04/15/you-and-your-career.html" target="_blank" rel="noopener">You and Your Career</a><br><a href="http://limboy.me/" target="_blank" rel="noopener">Limboy 无网不剩</a>最近有一篇文章更新，不是iOS技术文，不过却很有深意，推荐给大家。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;程序员总是在不停的翻新自己的代码，貌似我有点强迫症，有时候一个分行，一个空格都要按照自己预想的修改。今天的工作是在做代码的重构，合并公共代码，修改方法调用，调整架构等等。所以，今天想向大家推荐的是关于MVC/MVP/MVVM以及VIPER的文章。&lt;/p&gt;
&lt;p&gt;#####架
      
    
    </summary>
    
      <category term="启发日报" scheme="http://yoursite.com/categories/%E5%90%AF%E5%8F%91%E6%97%A5%E6%8A%A5/"/>
    
    
      <category term="架构" scheme="http://yoursite.com/tags/%E6%9E%B6%E6%9E%84/"/>
    
      <category term="基础知识点" scheme="http://yoursite.com/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
      <category term="思考" scheme="http://yoursite.com/tags/%E6%80%9D%E8%80%83/"/>
    
  </entry>
  
  <entry>
    <title>启发日报 第6期 2018/04/17</title>
    <link href="http://yoursite.com/2018/04/17/%E5%90%AF%E5%8F%91%E6%97%A5%E6%8A%A5-%E7%AC%AC6%E6%9C%9F-2018-04-17/"/>
    <id>http://yoursite.com/2018/04/17/启发日报-第6期-2018-04-17/</id>
    <published>2018-04-17T11:26:17.000Z</published>
    <updated>2018-04-17T11:31:47.000Z</updated>
    
    <content type="html"><![CDATA[<p>我们在写网络数据请求的时候，通常是异步执行的，此外，我们往往有另一个需求，就是例如异步并发去下载多个文件/图片，等所有下载完成后再更新页面。在这里，我们就涉及到多线程。 而iOS当前多线程编程的核心就是Block和GCD(Grand Central Dispatch).</p><p>所以今天第一个要推荐给大家的就是关于GCD的文章。</p><p>#####基础知识：<a href="https://www.jianshu.com/p/2d57c72016c6" target="_blank" rel="noopener">iOS多线程：『GCD』详尽总结</a><br>此外，也推荐大家《Effective Objective-C 2.0》编写高质量的iOS与OS X代码的52个有效方法这本书的第六章-块与大中枢派发这一章节：（书的话，大家自行购买哈，很不错的书，适合放在手边随时翻阅）</p><ul><li>第6章　块与大中枢派发</li><li>第37条：理解”块”这一概念</li><li>第38条：为常用的块类型创建typedef</li><li>第39条：用handler块降低代码分散程度</li><li>第40条：用块引用其所属对象时不要出现保留环</li><li>第41条：多用派发队列，少用同步锁</li><li>第42条：多用GCD，少用performSelector系列方法</li><li>第43条：掌握GCD及操作队列的使用时机</li><li>第44条：通过Dispatch Group机制，根据系统资源状况来执行任务</li><li>第45条：使用dispatch_once来执行只需运行一次的线程安全代码</li><li>第46条：不要使用dispatch_get_current_queue</li></ul><p>#####学习网站推荐：<a href="https://learnappmaking.com/" target="_blank" rel="noopener">learnappmaking</a><br>因为有订阅，所以定期会收到Reinder的Email，包括一些教程，或者开发技巧的推荐。不过今天收到的信确实“Do the work”。Reinder是一个很喜欢帮助大家编写代码，并分享开发经验的人，这份信的意思，大概是他在遇到太多太多不靠谱的开发人员向他求助后发出的呐喊。他列举了三个例子：</p><ul><li>One developer sent me 3 messages asking – no, literally begging – for help with a problem that could have been solved by Googling the error message and clicking on the first result.</li><li>Another developer, to whom I offered to help with a quick Skype call, didn’t show up for that call, despite having answered “10” on the question “On a scale of 1-10, how good do you want to get at iOS development?”</li><li>Yet another developer copied Xcode’s error message straight into the comment box – no question, no explanation, no “Hey, it doesn’t work, could you help me?”</li></ul><p>而他更期望的是提问题的人确实是做过工作的，就是他这封信的标题“Do the work”，也就是说当发生问题是，你自己确实努力过，而在你能力范围内无法解决时，再去提问。而不是遇到问题，直接丢给别人。<br>Questions I’ll happily answer any day and night:</p><ul><li>“I’m building this ecommerce app for fashion designers. Do you think I should use Firebase or Parse Server? I’ve tried both, but I don’t know how to decide.”</li><li>“I’m using Swift’s guard statement in my code, but I don’t know if I’m doing it right. Could you check out this function I wrote and let me know how I can improve it?”</li><li>“I encountered this error in my code. I know where it’s coming from, and I found this article that explains how to solve the error, but I’m totally stuck on applying that stuff in my own code. What’s the next step I can take?”</li></ul><p>These people are doing the work.</p><p>之前还看过一篇文章，好像是一位stackoverflow的活跃者最终和stackoverflow说拜拜，原因是因为在stackoverflow上，越来越多的人变的直接伸手，从来不看或者不查询是否自己的问题已经存在并解决。而这种现象却无法遏制，因此寒了心，从此不再上面回答问题了。</p><p>所以，为了让自己能得到更多的帮助，请在提问前尽可能多的做好自己的工作。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;我们在写网络数据请求的时候，通常是异步执行的，此外，我们往往有另一个需求，就是例如异步并发去下载多个文件/图片，等所有下载完成后再更新页面。在这里，我们就涉及到多线程。 而iOS当前多线程编程的核心就是Block和GCD(Grand Central Dispatch).&lt;/
      
    
    </summary>
    
      <category term="启发日报" scheme="http://yoursite.com/categories/%E5%90%AF%E5%8F%91%E6%97%A5%E6%8A%A5/"/>
    
    
      <category term="基础知识点" scheme="http://yoursite.com/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
      <category term="学习网站" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E7%BD%91%E7%AB%99/"/>
    
  </entry>
  
  <entry>
    <title>启发日报 第5期 2018/04/16</title>
    <link href="http://yoursite.com/2018/04/16/%E5%90%AF%E5%8F%91%E6%97%A5%E6%8A%A5-%E7%AC%AC5%E6%9C%9F-2018-04-16/"/>
    <id>http://yoursite.com/2018/04/16/启发日报-第5期-2018-04-16/</id>
    <published>2018-04-16T10:10:37.000Z</published>
    <updated>2018-04-16T10:12:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>新的一周开始了，今天首先给大家推荐的是Cocoapods以及Carthage。<br>开发过程中，我们肯定会用到其他第三方库，如果选择手动管理，或者我们需要将源码直接集成到我们的项目中，又或者编译代码，然后将类库链接到项目中，此外，还需要考虑版本以及兼容性问题。想想这些，就知道这会是一个浩大的工程。还好我们有CocoaPods和Carthage这两个工具来管理项目的一览关系。<br>中心化（CocoaPods）和去中心化（Carthage）的集成方式，你喜欢哪一个？其实无所谓喜欢，我们都会用就可以了。</p><p>#####集成工具推荐：<a href="https://cocoapods.org/" target="_blank" rel="noopener">Cocoapods</a>/Carthage</p><ul><li>关于Cocoapods的使用，当然推荐唐巧的这篇文章： <a href="http://blog.devtang.com/2014/05/25/use-cocoapod-to-manage-ios-lib-dependency/" title="用CocoaPods做iOS程序的依赖管理" target="_blank" rel="noopener">用CocoaPods做iOS程序的依赖管理</a></li><li>而Carthage，大家看看简书上的这篇文章如何：<a href="https://www.jianshu.com/p/6c4b1b4a69c5" target="_blank" rel="noopener">项目依赖管理工具之CocoaPods与Carthage</a></li></ul><p>今天想额外推荐给大家的两篇关于基础知识的文章</p><p>#####基础知识：<a href="http://www.cocoachina.com/ios/20180323/22742.html" target="_blank" rel="noopener">iOS开发之UIView与UIViewController的生命周期总结</a><br>我们可以通过代码或者借助于XIB/StoryBoard来创建UIView或者UIViewController，那么这两种创建方式，他们调用的API有什么不通，他们的生命周期是怎么样的？那么请看<a href="http://www.cocoachina.com/ios/20180323/22742.html" target="_blank" rel="noopener">iOS开发之UIView与UIViewController的生命周期总结</a></p><p>#####第三方库推荐：<a href="https://github.com/shaojiankui/JKCategories" target="_blank" rel="noopener">JKCategories</a><br>开发的时候，总会有一些常用的方法，但是苹果的官方类并没有给出API，我们总需要自己写一部分Category来扩展类的功能，例如日期转字符串，又或者button文字图片实现上下排列。久而久之，这部分代码一直来来回回的从一个项目COPY到另外一个项目，接下来就觉得我们该自己管理一份Category。<br>且慢，先来看看<a href="https://github.com/shaojiankui/JKCategories" target="_blank" rel="noopener">JKCategories</a>，这个Categories类库已经帮您把大部分的常用Categories实现，所以我们不必自己再造轮子，拿来直接使用即可。此外，您也可以学习学习这些Categories的实现代码，看看和自己以前写的有啥区别。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;新的一周开始了，今天首先给大家推荐的是Cocoapods以及Carthage。&lt;br&gt;开发过程中，我们肯定会用到其他第三方库，如果选择手动管理，或者我们需要将源码直接集成到我们的项目中，又或者编译代码，然后将类库链接到项目中，此外，还需要考虑版本以及兼容性问题。想想这些，就
      
    
    </summary>
    
      <category term="启发日报" scheme="http://yoursite.com/categories/%E5%90%AF%E5%8F%91%E6%97%A5%E6%8A%A5/"/>
    
    
      <category term="第三方框架" scheme="http://yoursite.com/tags/%E7%AC%AC%E4%B8%89%E6%96%B9%E6%A1%86%E6%9E%B6/"/>
    
      <category term="基础知识点" scheme="http://yoursite.com/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
      <category term="集成工具" scheme="http://yoursite.com/tags/%E9%9B%86%E6%88%90%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>启发日报 第4期 2018/04/13</title>
    <link href="http://yoursite.com/2018/04/13/%E5%90%AF%E5%8F%91%E6%97%A5%E6%8A%A5-%E7%AC%AC4%E6%9C%9F-2018-04-13/"/>
    <id>http://yoursite.com/2018/04/13/启发日报-第4期-2018-04-13/</id>
    <published>2018-04-13T04:05:06.000Z</published>
    <updated>2018-04-13T04:05:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天的第一个主题是Masonry，<a href="https://github.com/SnapKit/Masonry" target="_blank" rel="noopener">Masonry</a> 是一个轻量级的用于自动布局（AutoLayout）的第三方框架，以其简洁的使用方式，受到广大开发者的青睐。</p><p>#####第三方库推荐: <a href="https://github.com/SnapKit/Masonry" target="_blank" rel="noopener">Masonry</a></p><p>英文好的同学直接浏览<a href="https://github.com/SnapKit/Masonry" target="_blank" rel="noopener">Masonry</a> 就可以看到他的所有使用方法以及Demo。<br>想看中文的同学，可以浏览<a href="https://www.jianshu.com/p/f5883db2411d" target="_blank" rel="noopener">masonry使用技巧</a></p><p>#####源码分析：Masonry 源码解析<br>关于Marsony的源码分析，有不少大牛写过，在这里推荐给大家三篇，大家可以结合着看。<br><a href="http://blog.ifelseboyxx.com/2017/02/23/Masonry-Analysis/" target="_blank" rel="noopener">Masonry 源码解析</a><br><a href="https://github.com/Draveness/Analyze/blob/master/contents/Masonry/iOS%20%E6%BA%90%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90%20---%20Masonry.md" target="_blank" rel="noopener">iOS 源代码分析 — Masonry</a><br><a href="https://juejin.im/post/5acec952f265da237e0a197b" target="_blank" rel="noopener">iOS框架·Masonry源码深度解析及学习启示:设计模式与链式编程思想</a></p><p>#####基础知识点：NSCoding、NSSecureCoding协议<br>NSCoding经常应用在我们将某一个自定义class的结构存储到plist，或者序列化时。该协议非常简单，只需要实现下面这个两个协议：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- (void)encodeWithCoder:(NSCoder *)aCoder;</span><br><span class="line">- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder;</span><br></pre></td></tr></table></figure></p><p>下面这篇文章有详细的介绍：<a href="https://www.jianshu.com/p/c5475f30bb4e" target="_blank" rel="noopener">NSCoding、NSSecureCoding</a></p><p>不过，如果class中的属性特别多，并且属性的类型还不一样时，写NSCoding的接口就会变得很痛苦。有时候还可能经常对属性进行修改，都要改encode和decode方法，导致更加容易犯错误。有没有一种方案，能让我们随意的增删改class的属性，而不需要去修改encode和decode里的代码呢？去看看这个利用runtime的方案吧。<br><a href="https://blog.csdn.net/becomedragonlong/article/details/48376097" target="_blank" rel="noopener">一个简化NSCoding的方案</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天的第一个主题是Masonry，&lt;a href=&quot;https://github.com/SnapKit/Masonry&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Masonry&lt;/a&gt; 是一个轻量级的用于自动布局（AutoLayout）的第三方框架，
      
    
    </summary>
    
      <category term="启发日报" scheme="http://yoursite.com/categories/%E5%90%AF%E5%8F%91%E6%97%A5%E6%8A%A5/"/>
    
    
      <category term="第三方框架" scheme="http://yoursite.com/tags/%E7%AC%AC%E4%B8%89%E6%96%B9%E6%A1%86%E6%9E%B6/"/>
    
      <category term="基础知识点" scheme="http://yoursite.com/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
      <category term="源码分析" scheme="http://yoursite.com/tags/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>启发日报 第3期 2018/04/12</title>
    <link href="http://yoursite.com/2018/04/12/%E5%90%AF%E5%8F%91%E6%97%A5%E6%8A%A5-%E7%AC%AC3%E6%9C%9F-2018-04-12/"/>
    <id>http://yoursite.com/2018/04/12/启发日报-第3期-2018-04-12/</id>
    <published>2018-04-12T12:13:23.000Z</published>
    <updated>2018-04-12T12:14:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天浏览Cocoa China的时候，发现一篇不错的关于“iOS 性能优化总结”，所以，第一篇推荐给大家的就是这个。</p><p>#####性能：<a href="http://www.cocoachina.com/ios/20180412/22990.html" target="_blank" rel="noopener">iOS 性能优化总结</a><br>文章从卡顿产生的原因， iOS 设备中的 CPU &amp; GPU， 优化方案三方面做了综合的阐述。同时也给出了如何进行性能测试以及测试工具，同时附录的参考文章都是比较值得阅读的性能相关的文章。</p><p>#####基础知识点：<a href="https://juejin.im/post/5acece4cf265da238a30d2af" target="_blank" rel="noopener">字符串数组排序+模型对象数组排序</a><br>给字符串数组排序是非常常见的功能，对于iOS开发者来说，我们通常使用NSArray排序提供的sortedArrayUsingComparator 方法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- (NSArray&lt;ObjectType&gt; *)sortedArrayUsingComparator:(NSComparator NS_NOESCAPE)cmptr NS_AVAILABLE(10_6, 4_0);</span><br></pre></td></tr></table></figure></p><p>同时，苹果专门为NSString 提供的字符串比较方法，获得一个NSComparisonResult 类型，将其自动返回。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// locale arg used to be a dictionary pre-Leopard. We now accept NSLocale. Assumes the current locale if non-nil and non-NSLocale. nil continues to mean canonical compare, which doesn&apos;t depend on user&apos;s locale choice.</span><br><span class="line">- (NSComparisonResult)compare:(NSString *)string options:(NSStringCompareOptions)mask range:(NSRange)rangeOfReceiverToCompare locale:(nullable id)locale;</span><br></pre></td></tr></table></figure></p><p>但是你知道如果字符串里带有中文，日文或者特殊字符，这时候字符串的比较以及排序会怎么样吗？这篇文章对NSStringCompareOptions做了非常详细的分析以及对应的测试，我们不用完全记得，但至少有个印象，并把这篇文章加入到你的星标列表里。</p><p>#####第三方库推荐： <a href="https://github.com/dzenbot/DZNEmptyDataSet" target="_blank" rel="noopener">DZNEmptyDataSet</a><br>界面的空白状态是在“没有资料”、“空列表”、或“错误”时呈现给用户的界面，空白状态会透过一些图示或文字告诉使用者怎么回事，最后引导使用者操作相关的功能。良好的APP会花很多心思空白状态上，引导使用者添加内容到应用上，增强使用者的黏着度。大家可以参考下面的两篇文章，为我们阐述空白状态设计。<br><a href="https://tympanus.net/codrops/2013/01/09/designing-for-the-empty-states/" target="_blank" rel="noopener">Designing For The Empty States</a><br><a href="http://www.ui.cn/detail/20299.html" target="_blank" rel="noopener">浅谈界面的空白状态设计</a></p><p><a href="https://github.com/dzenbot/DZNEmptyDataSet" target="_blank" rel="noopener">DZNEmptyDataSet</a>提供了上述的设计的代码第三方框架，在这里推荐大家在自己的开发过程中使用，为哦那个户提供一个良好的空白状态界面。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天浏览Cocoa China的时候，发现一篇不错的关于“iOS 性能优化总结”，所以，第一篇推荐给大家的就是这个。&lt;/p&gt;
&lt;p&gt;#####性能：&lt;a href=&quot;http://www.cocoachina.com/ios/20180412/22990.html&quot; tar
      
    
    </summary>
    
      <category term="启发日报" scheme="http://yoursite.com/categories/%E5%90%AF%E5%8F%91%E6%97%A5%E6%8A%A5/"/>
    
    
      <category term="第三方框架" scheme="http://yoursite.com/tags/%E7%AC%AC%E4%B8%89%E6%96%B9%E6%A1%86%E6%9E%B6/"/>
    
      <category term="基础知识点" scheme="http://yoursite.com/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
      <category term="性能" scheme="http://yoursite.com/tags/%E6%80%A7%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>启发日报 第2期 2018/04/11</title>
    <link href="http://yoursite.com/2018/04/11/%E5%90%AF%E5%8F%91%E6%97%A5%E6%8A%A5-%E7%AC%AC2%E6%9C%9F-2018-04-11/"/>
    <id>http://yoursite.com/2018/04/11/启发日报-第2期-2018-04-11/</id>
    <published>2018-04-11T00:00:50.000Z</published>
    <updated>2018-04-11T00:03:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天推荐的内容，是和我最近开发的项目有关，相信这些话题，大家也会在平常的开发中遇到。</p><p>#####基础知识点：NSCopying/NSMutableCopying<br>今天写一些业务代码的时候，发现需要对自定义类的对象进行Copy操作。在C++中我们可以实现拷贝构造函数或者重载”=”操作符；而在Objective-C中，我们可以实现NSCopying/NSMutableCopying协议（当然前提是自定义的类继承自NSObject）。</p><p>在这里推荐下面的三篇文章：</p><ul><li><p>第一篇：<a href="https://www.jianshu.com/p/e98e6e30ebda" target="_blank" rel="noopener">iOS中几个常用协议（一）NSCopying/NSMutableCopying</a><br>因为在讨论NSCopying/NSMutableCopying时，我们不得不说的就是copy和mutableCopy，这篇文章做了很好的解释和总结。不过反而对主题NSCopying/NSMutableCopying，倒是有点一笔带过。</p></li><li><p>第二篇：<a href="http://www.cnblogs.com/chaoguo1234/p/6088593.html" target="_blank" rel="noopener">Objective-C中的copy协议</a><br>这篇的部分结论在第一篇中有提到，这里这要介绍了（实打实的基础内容）：</p></li><li>NSObject对象是否可以copy自己</li><li>实现copy协议时，何时需要调用[super copyWithZone:zone]</li><li>为何在copyWithZone方法中要调用[[[self class] alloc] init]来分配内存</li><li><p>propery中的copy属性</p></li><li><p>第三篇： <a href="https://stackoverflow.com/questions/18192220/how-to-implement-properly-mutablecopywithzone-and-copywithzone" target="_blank" rel="noopener">How to implement properly mutableCopyWithZone and copyWithZone</a><br>第一篇和第二篇都没有特别讲NSMutableCopying的实现，事实上我们通常用到NSCopying比较多。而用到NSMutableCopying时，就意味着我们自己的类，需要定义两个，类似NSArray以及NSMutableArray，一个为不可变版本，另外一个为可变版本。我没有特别找到中文版的很详细的例子去介绍如何定义以及实现这两个类及对应的NSCopying/NSMutableCopying协议，但在stackoverflow找到了相关的提问以及答案。</p></li></ul><p>#####FMDB的使用：<a href="http://blog.devtang.com/2012/04/22/use-fmdb/" title="在iOS开发中使用FMDB" target="_blank" rel="noopener">在iOS开发中使用FMDB</a><br>项目中有用到FMDB作为数据持久化方案，框架里设计的数据库管理工具类采用的是单例模式，今天在多线程操作时，涉及到频繁的更新数据库表时，出现了如下的错误：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. The FMDatabase &lt;FMDatabase: 0x7f8232c21f10&gt; is currently in use.</span><br><span class="line">2. error = not an error</span><br></pre></td></tr></table></figure></p><p>可见，FMDatabase本身不是线程安全的， 在多个线程中共同一个 FMDatabase 对象并且在多个线程中同时使用，会造成数据混乱等问题。 如果我们的 app 需要多线程操作数据库，那么就需要使用 FMDatabaseQueue 来保证线程安全。</p><p>具体的使用请参考唐巧的这篇文章，尽管是写在2012年的，但依然是干货慢慢，FMDB使用的标杆。</p><p>#####第三方库推荐： <strong><a href="https://github.com/jiecao-fm/SwiftTheme" target="_blank" rel="noopener">SwiftTheme</a></strong><br>最近的项目是一个阅读软件，因此有考虑夜间模式，所以想找一个主题框架，来实现白天/夜间模式的主题切换。在Github上翻阅了不少主题框架，最终决定使用这个，因此也向大家推荐。<br>这是一款简单、功能丰富、高性能、可扩展的主题框架（换肤框架）<br>主要特点</p><ul><li>纯Swift编写</li><li>兼容Objective-C</li><li>基于runtime</li><li>易于集成</li><li>扩展属性以 theme_* 开头，便于 IDE 自动补全</li><li>支持UIAppearance</li><li>自动监听主题切换，更新UI</li><li>支持通过字面量设置不同主题，通过索引进行切换</li><li>支持使用plist设置主题，可直接通过项目资源加载，或远程下载至沙盒中加载</li><li>主题参数配置错误时日志提示</li><li>强类型ThemePicker</li><li>完整的Demo</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天推荐的内容，是和我最近开发的项目有关，相信这些话题，大家也会在平常的开发中遇到。&lt;/p&gt;
&lt;p&gt;#####基础知识点：NSCopying/NSMutableCopying&lt;br&gt;今天写一些业务代码的时候，发现需要对自定义类的对象进行Copy操作。在C++中我们可以实现拷
      
    
    </summary>
    
      <category term="启发日报" scheme="http://yoursite.com/categories/%E5%90%AF%E5%8F%91%E6%97%A5%E6%8A%A5/"/>
    
    
      <category term="第三方框架" scheme="http://yoursite.com/tags/%E7%AC%AC%E4%B8%89%E6%96%B9%E6%A1%86%E6%9E%B6/"/>
    
      <category term="基础知识点" scheme="http://yoursite.com/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
      <category term="数据持久化" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>启发日报 第1期 2018/04/10</title>
    <link href="http://yoursite.com/2018/04/10/%E5%90%AF%E5%8F%91%E6%97%A5%E6%8A%A5-%E7%AC%AC1%E6%9C%9F-2018-04-10/"/>
    <id>http://yoursite.com/2018/04/10/启发日报-第1期-2018-04-10/</id>
    <published>2018-04-10T08:29:19.000Z</published>
    <updated>2018-04-10T08:52:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>这个主题，想了很久但一直没有下笔，如今打算给自己一个目标，也算是压力，看看能坚持多久。</p><p>主题名字就叫“启发日报”吧，周一到周五每天更新一篇文章，内容为iOS开发相关的好文推荐，可能是Apple的新闻，iOS的基础知识点，或者架构分析，框架，源码推荐等等。</p><p>今天是第一期，先推荐给大家的是Casa Taloyum的「iOS应用架构谈」。</p><p><a href="https://casatwy.com/iosying-yong-jia-gou-tan-kai-pian.html" target="_blank" rel="noopener">iOS应用架构谈 开篇</a><br><a href="https://casatwy.com/iosying-yong-jia-gou-tan-viewceng-de-zu-zhi-he-diao-yong-fang-an.html" target="_blank" rel="noopener">iOS应用架构谈 view层的组织和调用方案</a><br><a href="https://casatwy.com/iosying-yong-jia-gou-tan-wang-luo-ceng-she-ji-fang-an.html" target="_blank" rel="noopener">iOS应用架构谈 网络层设计方案</a><br><a href="https://casatwy.com/iosying-yong-jia-gou-tan-ben-di-chi-jiu-hua-fang-an-ji-dong-tai-bu-shu.html" target="_blank" rel="noopener">iOS应用架构谈 本地持久化方案及动态部署</a><br><a href="https://casatwy.com/iOS-Modulization.html" target="_blank" rel="noopener">iOS应用架构谈 组件化方案</a></p><p>每当我新开项目或者项目完成的时候，我都会去翻阅这几篇文章，iOS应用架构，不仅仅是MVC，或者MVVM，MVP这些模式，而是更高层的一个架构设计。C大的文章很好的从各方面做了详细的介绍，而且深入浅出，不管你是新手还是专家，我想都能从中受益。</p><p>这一期比较特殊，本来我应该推荐3-5个内容，但是我想C大的干货，足够大家好好大吃一顿了吧。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这个主题，想了很久但一直没有下笔，如今打算给自己一个目标，也算是压力，看看能坚持多久。&lt;/p&gt;
&lt;p&gt;主题名字就叫“启发日报”吧，周一到周五每天更新一篇文章，内容为iOS开发相关的好文推荐，可能是Apple的新闻，iOS的基础知识点，或者架构分析，框架，源码推荐等等。&lt;/p
      
    
    </summary>
    
      <category term="启发日报" scheme="http://yoursite.com/categories/%E5%90%AF%E5%8F%91%E6%97%A5%E6%8A%A5/"/>
    
    
      <category term="架构" scheme="http://yoursite.com/tags/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
</feed>
